#nullable enable
Microsoft.Maui.Handlers.ContextFlyoutHandler
Microsoft.Maui.Handlers.ContextFlyoutHandler.Add(Microsoft.Maui.IMenuElement! view) -> void
Microsoft.Maui.Handlers.ContextFlyoutHandler.Clear() -> void
Microsoft.Maui.Handlers.ContextFlyoutHandler.ContextFlyoutHandler() -> void
Microsoft.Maui.Handlers.ContextFlyoutHandler.ContextFlyoutHandler(Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.Handlers.ContextFlyoutHandler.Insert(int index, Microsoft.Maui.IMenuElement! view) -> void
Microsoft.Maui.Handlers.ContextFlyoutHandler.Remove(Microsoft.Maui.IMenuElement! view) -> void
Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate
Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate.ContextFlyoutItemHandlerUpdate(int Index, Microsoft.Maui.IMenuElement! MenuElement) -> void
Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate.Index.get -> int
Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate.Index.init -> void
Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate.MenuElement.get -> Microsoft.Maui.IMenuElement!
Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate.MenuElement.init -> void
Microsoft.Maui.Handlers.IContextFlyoutHandler
Microsoft.Maui.Handlers.IContextFlyoutHandler.Add(Microsoft.Maui.IMenuElement! view) -> void
Microsoft.Maui.Handlers.IContextFlyoutHandler.Clear() -> void
Microsoft.Maui.Handlers.IContextFlyoutHandler.Insert(int index, Microsoft.Maui.IMenuElement! view) -> void
Microsoft.Maui.Handlers.IContextFlyoutHandler.PlatformView.get -> object!
Microsoft.Maui.Handlers.IContextFlyoutHandler.Remove(Microsoft.Maui.IMenuElement! view) -> void
Microsoft.Maui.Handlers.IContextFlyoutHandler.VirtualView.get -> Microsoft.Maui.IContextFlyout!
Microsoft.Maui.Handlers.IMenuFlyoutSeparatorHandler
Microsoft.Maui.Handlers.IMenuFlyoutSeparatorHandler.PlatformView.get -> UIKit.UIMenu!
Microsoft.Maui.Handlers.IMenuFlyoutSeparatorHandler.VirtualView.get -> Microsoft.Maui.IMenuFlyoutSeparator!
Microsoft.Maui.Handlers.MenuFlyoutSeparatorHandler
Microsoft.Maui.Handlers.MenuFlyoutSeparatorHandler.MenuFlyoutSeparatorHandler() -> void
Microsoft.Maui.Handlers.MenuFlyoutSeparatorHandler.MenuFlyoutSeparatorHandler(Microsoft.Maui.IPropertyMapper! mapper, Microsoft.Maui.CommandMapper? commandMapper = null) -> void
Microsoft.Maui.IContextFlyout
Microsoft.Maui.IContextFlyoutContainer
Microsoft.Maui.IContextFlyoutContainer.ContextFlyout.get -> Microsoft.Maui.IContextFlyout?
Microsoft.Maui.IMenuFlyoutSeparator
override Microsoft.Maui.Handlers.BorderHandler.ConnectHandler(Microsoft.Maui.Platform.ContentView! platformView) -> void
override Microsoft.Maui.Handlers.BorderHandler.DisconnectHandler(Microsoft.Maui.Platform.ContentView! platformView) -> void
override Microsoft.Maui.Handlers.ContextFlyoutHandler.CreatePlatformElement() -> UIKit.UIMenu!
override Microsoft.Maui.Handlers.ScrollViewHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect rect) -> void
override Microsoft.Maui.Handlers.MenuFlyoutSeparatorHandler.CreatePlatformElement() -> UIKit.UIMenu!
override Microsoft.Maui.Handlers.EditorHandler.SetVirtualView(Microsoft.Maui.IView! view) -> void
override Microsoft.Maui.Handlers.EntryHandler.SetVirtualView(Microsoft.Maui.IView! view) -> void
override Microsoft.Maui.Platform.ContentView.SetNeedsLayout() -> void
override Microsoft.Maui.Platform.LayoutView.HitTest(CoreGraphics.CGPoint point, UIKit.UIEvent? uievent) -> UIKit.UIView!
override Microsoft.Maui.Platform.LayoutView.SetNeedsLayout() -> void
override Microsoft.Maui.Platform.LayoutView.UserInteractionEnabled.get -> bool
override Microsoft.Maui.Platform.LayoutView.UserInteractionEnabled.set -> void
*REMOVED*override Microsoft.Maui.Handlers.LabelHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect rect) -> void
*REMOVED*override Microsoft.Maui.Handlers.ScrollViewHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect frame) -> void
static Microsoft.Maui.Handlers.ContextFlyoutHandler.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.IContextFlyout!, Microsoft.Maui.Handlers.IContextFlyoutHandler!>!
static Microsoft.Maui.Handlers.ContextFlyoutHandler.MapAdd(Microsoft.Maui.Handlers.IContextFlyoutHandler! handler, Microsoft.Maui.IContextFlyout! menuElement, object? arg) -> void
static Microsoft.Maui.Handlers.ContextFlyoutHandler.MapClear(Microsoft.Maui.Handlers.IContextFlyoutHandler! handler, Microsoft.Maui.IContextFlyout! menuElement, object? arg) -> void
static Microsoft.Maui.Handlers.ContextFlyoutHandler.MapInsert(Microsoft.Maui.Handlers.IContextFlyoutHandler! handler, Microsoft.Maui.IContextFlyout! menuElement, object? arg) -> void
static Microsoft.Maui.Handlers.ContextFlyoutHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IContextFlyout!, Microsoft.Maui.Handlers.IContextFlyoutHandler!>!
static Microsoft.Maui.Handlers.ContextFlyoutHandler.MapRemove(Microsoft.Maui.Handlers.IContextFlyoutHandler! handler, Microsoft.Maui.IContextFlyout! menuElement, object? arg) -> void
static Microsoft.Maui.Handlers.MenuFlyoutSeparatorHandler.CommandMapper -> Microsoft.Maui.CommandMapper<Microsoft.Maui.IMenuFlyoutSeparator!, Microsoft.Maui.Handlers.IMenuFlyoutSeparatorHandler!>!
static Microsoft.Maui.Handlers.MenuFlyoutSeparatorHandler.Mapper -> Microsoft.Maui.IPropertyMapper<Microsoft.Maui.IMenuFlyoutSeparator!, Microsoft.Maui.Handlers.IMenuFlyoutSeparatorHandler!>!
static Microsoft.Maui.Handlers.ViewHandler.MapContextFlyout(Microsoft.Maui.IViewHandler! handler, Microsoft.Maui.IView! view) -> void
static Microsoft.Maui.Platform.ViewExtensions.UpdateBackground(this UIKit.UIView! platformView, Microsoft.Maui.Graphics.Paint? paint, Microsoft.Maui.IButtonStroke? stroke = null) -> void
virtual Microsoft.Maui.MauiUIApplicationDelegate.ApplicationSignificantTimeChange(UIKit.UIApplication! application) -> void
Microsoft.Maui.LifecycleEvents.iOSLifecycle.ApplicationSignificantTimeChange
static Microsoft.Maui.LifecycleEvents.iOSLifecycleBuilderExtensions.ApplicationSignificantTimeChange(this Microsoft.Maui.LifecycleEvents.IiOSLifecycleBuilder! lifecycle, Microsoft.Maui.LifecycleEvents.iOSLifecycle.ApplicationSignificantTimeChange! del) -> Microsoft.Maui.LifecycleEvents.IiOSLifecycleBuilder!
override Microsoft.Maui.Platform.MauiTextField.SelectedTextRange.get -> UIKit.UITextRange?
override Microsoft.Maui.Platform.MauiTextField.SelectedTextRange.set -> void
*REMOVED* override Microsoft.Maui.Handlers.PickerSource.Dispose(bool disposing) -> void
